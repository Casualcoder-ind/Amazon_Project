-- Business Analysis Problems 

-- 1. Top selling products 
 -- Query the top 10 products by total sales value 
 -- include : product name , total quantity sold and total sales value . 
 


Select * from order_items;

UPDATE order_items
SET price_per_unit = CASE order_item_id
    WHEN 5 THEN 129.99
    WHEN 6 THEN 24.50
    WHEN 7 THEN 49.99
    WHEN 8 THEN 55.75
    WHEN 9 THEN 65.00
    WHEN 10 THEN 70.00
    WHEN 11 THEN 80.00
    WHEN 12 THEN 90.59
    ELSE price_per_unit  -- leave unchanged for others
END
WHERE order_item_id IN (5, 6, 7, 8, 9, 10, 11, 12);

 
 -- creating new column 
 
 
Alter table order_items
ADD column total_sale FLOAT ;

select * from order_items;

Update order_items
SET total_sale = price_per_unit * quantity;


Select 
   oi.product_id,
   p.product_name,
   SUM(oi.total_sale) as total_sale,
   COUNT(o.order_id) as total_orders
from orders as o
JOIN
order_items as oi
ON oi.order_id = o.order_id
JOIN
products as p
ON p.product_id = oi.product_id 
GROUP BY 1, 2 
order by 3 DESC
LIMIT 10;

/*
--2. Revenue by categary 
	calculate totdal revenue generated by each product categary .
    Include the percentage contribution of each categary to toal revenue. */
    
-- categary_id , categary_name , total _revenue , total_contri
-- oi --products--category
-- group by categary_id and name sum total oi

Select 
p.category_id,
c.categary_name,
SUM(oi.total_sale) as total_sale,
SUM(oi.total_sale)/(select SUM(total_sale) from order_items)*100
as contribution
from order_items as oi
JOIN
 products as p
 ON p.product_id = oi.product_id 
 LEFT JOIN categary as c
 ON c.categary_id = p.product_id 
 Group By 1 ,2 
 order by 3 DESC ;
